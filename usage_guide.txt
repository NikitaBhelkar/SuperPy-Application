Program flow 

main function of super.py file -> calls the services from the controller.py ->
checks for various conditions and accordingly calls methods from functions.py and classes.py to show the output on the terminal

while running the commands - change directory to superpy/app folder -as the super.py file is present inside app folder
----------------------------------------------------------------------------------------
1. python superpy -- help

usage: super.py [-h] [--advance-time ADVANCE_TIME] {buy,sell,report} ...

positional arguments:
  {buy,sell,report}
    buy                 buy command includes product_name, price, and expiration_date for the product
    sell                sell command includes product_name, price for the product
    report              reports inventory details, revenue details and profit details for the        

options:
  -h, --help            show this help message and exit
  --advance-time ADVANCE_TIME
                        date is advanced by number of days

------------------------------------------------------------------------------------------
2. Advance today's date by 2 days - 

python super.py --advance-time 2

artificial_date : (advanced date will be printed)

eg - if today_date : 2022-07-10
     then artificial_date:  2022-07-12

--------------------------------------------------------------------------------------------
3. Adding bought products details to bought_file -

python super.py buy --product-name orange --price 0.8 --expiration-date 2022-09-30
python super.py buy --product-name orange --price 0.8 --expiration-date 2022-09-02
python super.py buy --product-name orange --price 0.8 --expiration-date 2022-09-26
python super.py buy --product-name apple --price 0.5 --expiration-date 2022-09-30
python super.py buy --product-name grapes --price 0.6 --expiration-date 2022-09-30

OK. Data has been loaded successfully !

-----------------------------------------------------------------------------------------
4. Reports the current inventory details -

python super.py report inventory --now
+----------------+------------+-------------------+---------+
| product_name   | buy_date   | expiration_date   |   count |
+================+============+===================+=========+
| orange         | 2022-09-07 | 2022-09-30        |       1 |
+----------------+------------+-------------------+---------+
| orange         | 2022-09-07 | 2022-09-02        |       1 |
+----------------+------------+-------------------+---------+
| orange         | 2022-09-07 | 2022-09-26        |       1 |
+----------------+------------+-------------------+---------+
| apple          | 2022-09-07 | 2022-09-30        |       1 |
+----------------+------------+-------------------+---------+
| grapes         | 2022-09-07 | 2022-09-30        |       1 |
+----------------+------------+-------------------+---------+
------------------------------------------------------------------------------------------
5. Reports the inventory details till yesterday - 

python super.py report inventory --yesterday

No products available
---------------------------------------------------------------------------------------------------------------------------------------
6. Add the productdetails to sold_file with selling price as mentioned in the command and removes sold products details from bought_file copy

python super.py sell --product-name orange --price 2

OK!
------------------------------------------------------------------------------------------------------------------------------------------
7. Reports yesterday's revenue -

python super.py report revenue --yesterday

Yesterday's revenue: 0
------------------------------------------------------------------------------------------------------------------------------------------
8. Reports today's revenue -

python super.py report revenue --today

Today's revenue so far:  4.0
----------------------------------------------------------------------------------------------------------------------------------------
9. Reports revenue for the mentioned month -

python super.py report revenue --date 2019-12

Revenue from  December 2019 :  0

python super.py report revenue --date 2022-09

Revenue from  August 2022 : 4.0
---------------------------------------------------------------------------------------------------------------------------------------
10. Reports today's profit -

python super.py report profit --today

profit_percent : revenue of products sold - revenue of products bought

profit_percent : 2.4
----------------------------------------------------------------------------------------------------------------------------------------
11. python super.py sell --product-name orange --price 2

prints the error msg - ERROR: Product not in stock. if the product is not found in the bought_file_copy

------------------------------------------------------------------------------------------------------------------------------------------
12. Run python reports.py file to get below reports - 1. Total products bought on particular date (scatterplot)
                                                  2. Total products sold on particular date (scatter plot)
                                                  3. Revenue of products on particular date (Barplot)

 python reports.py
---------------------------------------------------------------------------------------------------------------------------------------------