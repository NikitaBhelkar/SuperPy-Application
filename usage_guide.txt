Program flow 

main function of super.py file -> calls the services from the controller.py ->
checks for various conditions and accordingly calls methods from functions.py and classes.py to show the output on the terminal

while running the commands - change directory to superpy/app folder -as the super.py file is present inside app folder
----------------------------------------------------------------------------------------
1. Adding bought products details to bought_file -

python super.py buy --product-name orange --price 0.8 --expiration-date 2022-07-08
python super.py buy --product-name orange --price 0.8 --expiration-date 2022-07-15
python super.py buy --product-name apple --price 0.6 --expiration-date 2022-07-15
python super.py buy --product-name banana --price 0.9 --expiration-date 2022-07-20
python super.py buy --product-name banana --price 0.4 --expiration-date 2022-07-20

OK. Data has been loaded successfully !

-----------------------------------------------------------------------------------------
2. Reports the current inventory details -

python super.py report inventory --now

+----------------+------------+-------------------+---------+
| product_name   | buy_date   | expiration_date   |   count |
+================+============+===================+=========+
| orange         | 2022-07-10 | 2022-07-08        |       1 |
+----------------+------------+-------------------+---------+
| orange         | 2022-07-10 | 2022-07-15        |       1 |
+----------------+------------+-------------------+---------+
| apple          | 2022-07-10 | 2022-07-15        |       1 |
+----------------+------------+-------------------+---------+
| banana         | 2022-07-10 | 2022-07-20        |       2 |
+----------------+------------+-------------------+---------+
--------------------------------------------------------------------------------------------
3. Advance today's date by 2 days - 

python super.py --advance-time 2

artificial_date : (advanced date will be printed)

eg - if today_date : 2022-07-10
     then artificial_date:  2022-07-12

------------------------------------------------------------------------------------------
4. Reports the inventory details till yesterday - 

python super.py report inventory --yesterday

No products available
---------------------------------------------------------------------------------------------------------------------------------------
5. Add the productdetails to sold_file with selling price as mentioned in the command and removes sold products details from bought_file copy

python super.py sell --product-name orange --price 2

OK!
------------------------------------------------------------------------------------------------------------------------------------------
6. Reports yesterday's revenue -

python super.py report revenue --yesterday

Yesterday's revenue: 0
------------------------------------------------------------------------------------------------------------------------------------------
7. Reports today's revenue -

python super.py report revenue --today

Today's revenue so far:  4.0
----------------------------------------------------------------------------------------------------------------------------------------
8. Reports revenue for the mentioned month -

python super.py report revenue --date 2019-12

Revenue from  December 2019 :  0

python super.py report revenue --date 2022-07

Revenue from  July 2022 : 4.0
---------------------------------------------------------------------------------------------------------------------------------------
9. Reports today's profit -

python super.py report profit --today

profit_percent : -1.1000000000000005
----------------------------------------------------------------------------------------------------------------------------------------
10. python super.py sell --product-name orange --price 2

prints the error msg - ERROR: Product not in stock. if the product is not found in the bought_file_copy

------------------------------------------------------------------------------------------------------------------------------------------
11. Run python reports.py file to get below reports - 1. Total products bought on particular date (scatterplot)
                                                  2. Total products sold on particular date (scatter plot)
                                                  3. Revenue of products on particular date (Barplot)

---------------------------------------------------------------------------------------------------------------------------------------------